<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.qyh.dao.BlogDao">

	<resultMap type="Blog" id="BlogDetail">
		<id column="id" property="id" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="display" property="display"/>
		<result column="write_date" property="writeDate" />
		<result column="hits" property="hits" />
		<result column="summary" property="summary" />
		<result column="comment_scope" property="commentScope"
			typeHandler="EnumOrdinalTypeHandler" />
		<result property="lastModifyDate" column="lastModifyDate" />
		<result property="level" column="blog_level" />
		<result property="recommend" column="recommend"/>
		<result property="comments" column="comments"/>
		<result property="scope" column="scope" typeHandler="EnumOrdinalTypeHandler" />
		<result property="status" column="blog_status" typeHandler="EnumOrdinalTypeHandler" />
		<result property="from" column="blog_from" typeHandler="EnumOrdinalTypeHandler" />
		<result property="tags" column="tagList" typeHandler="TagSetTypeHandler"/>
		<result property="editor" column="editor" typeHandler="EnumOrdinalTypeHandler"/>
		<result property="del" column="del"/>
		<association property="category" javaType="BlogCategory">
			<id column="category" property="id" />
			<result property="name" column="category_name" />
		</association>
		<association property="space" javaType="Space">
			<id column="space_id" property="id" />
			<association property="user" javaType="User">
				<id column="user_id" property="id"/>
				<result column="nickname" property="nickname" />
				<result column="avatar" property="avatar"/>
			</association>
		</association>
	</resultMap>

	<resultMap type="me.qyh.bean.BlogCategoryFile" id="BlogCategoryFileDetail">
		<id column="category_id" />
		<result column="count" property="count" javaType="int" />
		<association property="category" javaType="BlogCategory">
			<result column="category_id" property="id" />
			<result column="category_name" property="name" />
		</association>
	</resultMap>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT
		INTO blog
		(
		title,
		content,
		write_date,
		hits,
		summary,
		scope,
		blog_status,
		blog_from,
		category,
		space_id,
		comment_scope,
		blog_level,
		comments,
		editor,
		display
		)
		VALUES
		(
		#{title},
		#{content},
		#{writeDate},
		0,
		#{summary},
		#{scope,javaType=Scope,typeHandler=EnumOrdinalTypeHandler},
		#{status,javaType=BlogStatus,typeHandler=EnumOrdinalTypeHandler},
		#{from,javaType=BlogFrom,typeHandler=EnumOrdinalTypeHandler},
		#{category.id},
		#{space.id},
		#{commentScope,javaType=Scope,typeHandler=EnumOrdinalTypeHandler},
		#{level},
		0,
		#{editor,javaType=Editor,typeHandler=EnumOrdinalTypeHandler},
		#{display}
		)
	</insert>

	<select id="selectById" resultMap="BlogDetail">
		SELECT
		b.id,b.summary,b.del,b.blog_level,b.write_date,b.title,b.hits,b.blog_from,b.category,b.space_id,bc.category_name,b.scope,comment_scope,blog_status,b.content,b.recommend,GROUP_CONCAT(CONCAT(t.tag_name,'_',convert(t.id,char))) AS tagList,comments
		,editor,display FROM blog b
		LEFT OUTER JOIN blog_category bc ON b.category = bc.id
		LEFT OUTER JOIN blog_tag bt ON bt.blog = b.id
		LEFT OUTER JOIN tag t ON bt.tag_id = t.id
		WHERE b.id = #{id}
		GROUP BY b.id
	</select>
	
	<select id="selectPreview" resultMap="BlogDetail">
		SELECT
		b.id,b.summary,b.del,blog_status,b.write_date,b.title,b.hits,b.blog_from,b.blog_level,
		b.category,b.space_id,bc.category_name,scope,b.comment_scope,b.recommend,bs.id AS user_id,nickname,comments,bs.avatar
		FROM blog b
		LEFT OUTER JOIN user_space us ON b.space_id = us.id
		LEFT OUTER JOIN blog_user bs ON us.user_id = bs.id
		LEFT OUTER JOIN blog_category bc ON b.category = bc.id
		WHERE b.id = #{id}
	</select>
	

	<select id="selectPage" resultMap="BlogDetail">
		SELECT
		b.id,b.summary,b.del,blog_status,b.write_date,b.title,b.hits,b.blog_from,b.blog_level,
		b.category,b.space_id,bc.category_name,scope,b.comment_scope,b.recommend,bs.id AS user_id,nickname,comments
		FROM blog b
		LEFT OUTER JOIN user_space us ON b.space_id = us.id
		LEFT OUTER JOIN blog_user bs ON us.user_id = bs.id
		LEFT OUTER JOIN blog_category bc ON b.category = bc.id
		LEFT OUTER JOIN blog_tag bt ON bt.blog = b.id
		<where>
			<if test="del != null">
				del = #{del}
			</if>
			<if test="recommend != null">
				AND recommend = #{recommend}
			</if>
			<if test="space != null">
				AND b.space_id = #{space.id}
			</if>
			<if test="from != null">
				AND blog_from =
				#{from,javaType=BlogFrom,typeHandler=EnumOrdinalTypeHandler}
			</if>
			<if test="status != null">
				AND blog_status =
				#{status,javaType=BlogStatus,typeHandler=EnumOrdinalTypeHandler}
			</if>
			<if test="tags != null and !tags.isEmpty()">
				AND bt.tag_id IN (SELECT t.id FROM tag t  WHERE (
				 <foreach collection="tags" item="t" open=""
				    separator="or" close="">
				    t.tag_name LIKE CONCAT('%', #{t},'%')
				  </foreach>
				))
			</if>
			<if test="title != null and title != ''">
				AND title LIKE CONCAT('%', #{title},'%')
			</if>
			<if test="category != null and category.id != null">
				AND category = #{category.id}
			</if>
			<if test="scopes != null and !scopes.isEmpty()">
				AND
				(
				<foreach collection="scopes.scopes" item="s" open="" separator="OR"
					close="">
					scope =
					#{s,javaType=Scope,typeHandler=EnumOrdinalTypeHandler}
				</foreach>
				)
			</if>
			<if test="begin != null and end != null">
				AND write_date BETWEEN #{begin} AND #{end}
			</if>
		</where>
		GROUP BY b.id
		<choose>
			<when test="space != null and !ignoreLevel">
				ORDER BY b.blog_level DESC,id DESC
			</when>
			<otherwise>
				ORDER BY b.id DESC
			</otherwise>
		</choose>
		LIMIT #{offset},#{pageSize}
	</select>

	<select id="selectCount" resultType="int">
		SELECT COUNT(DISTINCT(b.id))
		FROM blog b
		<if test="tags != null and !tags.isEmpty()">
			LEFT OUTER JOIN blog_tag bt ON bt.blog = b.id
		</if>
		<where>
			<if test="del != null">
				del = #{del}
			</if>
			<if test="recommend != null">
				AND recommend = #{recommend}
			</if>
			<if test="space != null">
				AND b.space_id = #{space.id}
			</if>
			<if test="from != null">
				AND blog_from =
				#{from,javaType=BlogFrom,typeHandler=EnumOrdinalTypeHandler}
			</if>
			<if test="status != null">
				AND blog_status =
				#{status,javaType=BlogStatus,typeHandler=EnumOrdinalTypeHandler}
			</if>
			<if test="title != null and title != ''">
				AND title LIKE CONCAT('%', #{title},'%')
			</if>
			<if test="category != null and category.id != null">
				AND category = #{category.id}
			</if>
			<if test="scopes != null and !scopes.isEmpty()">
				AND
				(
				<foreach collection="scopes.scopes" item="s" open="" separator="OR"
					close="">
					scope =
					#{s,javaType=Scope,typeHandler=EnumOrdinalTypeHandler}
				</foreach>
				)
			</if>
			<if test="begin != null and end != null">
				AND write_date BETWEEN #{begin} AND #{end}
			</if>
			<if test="tags != null and !tags.isEmpty()">
				AND bt.tag_id IN (SELECT t.id FROM tag t  WHERE (
				 <foreach collection="tags" item="t" open=""
				    separator="or" close="">
				    t.tag_name LIKE CONCAT('%', #{t},'%')
				  </foreach>
				))
			</if>
		</where>
	</select>

	<update id="update">
		UPDATE blog
		<set>
			<if test="title != null">
				title = #{title},
			</if>
			<if test="content != null">
				content = #{content},
			</if>
			<if test="content != null">
				display = #{display},
			</if>
			<if test="summary != null">
				summary = #{summary},
			</if>
			<if test="from != null">
				blog_from =
				#{from,javaType=BlogFrom,typeHandler=EnumOrdinalTypeHandler},
			</if>
			<if test="status != null">
				blog_status =
				#{status,javaType=BlogStatus,typeHandler=EnumOrdinalTypeHandler},
			</if>
			<if test="writeDate != null">
				write_date = #{writeDate},
			</if>
			<if test="lastModifyDate != null">
				lastModifyDate = #{lastModifyDate},
			</if>
			<if test="scope != null">
				scope =
				#{scope,javaType=Scope,typeHandler=EnumOrdinalTypeHandler},
			</if>
			<if test="category != null">
				category = #{category.id},
			</if>
			<if test="commentScope != null">
				comment_scope =
				#{commentScope,javaType=Scope,typeHandler=EnumOrdinalTypeHandler},
			</if>
			<if test="level != null">
				blog_level = #{level}
			</if>
		</set>
		WHERE id = #{id}
	</update>
	
	<update id="updateDel">
		UPDATE blog SET del = #{del} WHERE id = #{id}
	</update>
	
	<update id="updateRecommend">
		UPDATE blog
		SET recommend = #{recommend}
		WHERE id = #{id}
	</update>

	<update id="updateHits">
		UPDATE blog
		SET hits = hits + #{hits}
		WHERE id = #{id}
	</update>

	<select id="selectDateFile" resultType="me.qyh.bean.DateFileIndex">
		SELECT write_date AS date,COUNT(id) AS count FROM blog
		WHERE space_id =
		#{space.id}
		AND del = false
		<if test="scopes != null and !scopes.isEmpty()">
			AND
			(
			<foreach collection="scopes.scopes" item="s" open="" separator="OR"
				close="">
				scope =
				#{s,javaType=Scope,typeHandler=EnumOrdinalTypeHandler}
			</foreach>
			)
		</if>
		<if test="begin != null and end != null">
			AND write_date BETWEEN #{begin} AND #{end}
		</if>
		GROUP BY DATE_FORMAT(write_date,'%Y-%m')
		ORDER BY id DESC
	</select>

	<select id="selectCategoryFile" resultMap="BlogCategoryFileDetail">
		SELECT category_name,bc.id AS category_id,COUNT(b.id) AS COUNT
		FROM
		blog b
		LEFT OUTER JOIN blog_category bc ON b.`category` = bc.id
		WHERE
		b.space_id = #{space.id}
		AND del = false
		<if test="scopes != null and !scopes.isEmpty()">
			AND
			(
			<foreach collection="scopes.scopes" item="s" open="" separator="OR"
				close="">
				b.scope =
				#{s,javaType=Scope,typeHandler=EnumOrdinalTypeHandler}
			</foreach>
			)
		</if>
		<if test="begin != null and end != null">
			AND write_date BETWEEN #{begin} AND #{end}
		</if>
		GROUP BY bc.`id`
		ORDER BY bc.`id` DESC
	</select>


	<delete id="deleteById">
		DELETE FROM blog WHERE id = #{id}
	</delete>
	
	<select id="getPreviousBlog" resultType="Blog">
		SELECT b.id,b.title,b.write_date AS writeDate FROM blog b
		<if test="param.tags != null and !param.tags.isEmpty()">
			LEFT OUTER JOIN blog_tag bt ON bt.blog = b.id
			LEFT OUTER JOIN tag t ON bt.tag_id = t.id
		</if>
		WHERE 
		del = false
		AND b.id  <![CDATA[ < ]]> #{id}
		<if test="param.recommend != null">
			AND recommend = #{param.recommend}
		</if>
		<if test="param.space != null">
			AND b.space_id = #{param.space.id}
		</if>
		<if test="param.from != null">
			AND blog_from = #{param.from,javaType=BlogFrom,typeHandler=EnumOrdinalTypeHandler}
		</if>
		<if test="param.status != null">
			AND blog_status = #{param.status,javaType=BlogStatus,typeHandler=EnumOrdinalTypeHandler}
		</if>
		<if test="param.title != null and param.title != ''">
			AND title LIKE CONCAT('%', #{param.title},'%')
		</if>
		<if test="param.category != null and param.category.id != null">
			AND category = #{param.category.id}
		</if>
		<if test="param.scopes != null and !param.scopes.isEmpty()">
			AND
			(
			<foreach collection="param.scopes.scopes" item="s" open="" separator="OR"
				close="">
				scope = #{s,javaType=Scope,typeHandler=EnumOrdinalTypeHandler}
			</foreach>
			)
		</if>
		<if test="param.begin != null and param.end != null">
			AND write_date BETWEEN #{param.begin} AND #{param.end}
		</if>
		<if test="param.tags != null and !param.tags.isEmpty()">
			AND(
			 <foreach collection="param.tags" item="t" open=""
			    separator="or" close="">
			    t.tag_name LIKE CONCAT('%', #{t},'%')
			  </foreach>
			)
		</if>
		ORDER BY b.id DESC
		LIMIT 0,1
	</select>
	
	<select id="getNextBlog" resultType="Blog">
		SELECT b.id,b.title,b.write_date AS writeDate FROM blog b
		<if test="param.tags != null and !param.tags.isEmpty()">
			LEFT OUTER JOIN blog_tag bt ON bt.blog = b.id
			LEFT OUTER JOIN tag t ON bt.tag_id = t.id
		</if>
		WHERE 
		del = false
		AND b.id  > #{id}
		<if test="param.recommend != null">
			AND recommend = #{param.recommend}
		</if>
		<if test="param.space != null">
			AND b.space_id = #{param.space.id}
		</if>
		<if test="param.from != null">
			AND blog_from = #{param.from,javaType=BlogFrom,typeHandler=EnumOrdinalTypeHandler}
		</if>
		<if test="param.status != null">
			AND blog_status = #{param.status,javaType=BlogStatus,typeHandler=EnumOrdinalTypeHandler}
		</if>
		<if test="param.title != null and param.title != ''">
			AND title LIKE CONCAT('%', #{param.title},'%')
		</if>
		<if test="param.category != null and param.category.id != null">
			AND category = #{param.category.id}
		</if>
		<if test="param.scopes != null and !param.scopes.isEmpty()">
			AND
			(
			<foreach collection="param.scopes.scopes" item="s" open="" separator="OR"
				close="">
				scope = #{s,javaType=Scope,typeHandler=EnumOrdinalTypeHandler}
			</foreach>
			)
		</if>
		<if test="param.begin != null and param.end != null">
			AND write_date BETWEEN #{param.begin} AND #{param.end}
		</if>
		<if test="param.tags != null and !param.tags.isEmpty()">
			AND(
			 <foreach collection="param.tags" item="t" open=""
			    separator="or" close="">
			    t.tag_name LIKE CONCAT('%', #{t},'%')
			  </foreach>
			)
		</if>
		ORDER BY b.id ASC
		LIMIT 0,1
	</select>
	
	<update id="updateComments">
		UPDATE blog SET comments = comments + #{comments} WHERE id = #{id}
	</update>

</mapper>