<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.qyh.dao.CommentDao">

	<resultMap type="Comment" id="CommentDetail">
		<id column="id" property="id" />
		<result column="comment_title" property="title" />
		<result column="content" property="content" />
		<result column="anonymous" property="isAnonymous" />
		<result column="comment_date" property="commentDate" />
		<association property="user" javaType="User">
			<id column="user_id" property="id" />
			<id column="user_nickname" property="nickname" />
			<association property="avatar" javaType="MyFile">
				<result column="file_name" property="name" />
				<result column="file_store" property="store" typeHandler="FileStorageTypeHandler" />
				<result column="relativePath" property="relativePath" />
			</association>
		</association>
		<association property="parent" javaType="Comment">
			<id column="parent_id" property="id" />
		</association>
		<association property="replyTo" javaType="User">
			<id column="reply_to" property="id" />
			<id column="reply_nickname" property="nickname" />
		</association>
		<association property="reply" javaType="Comment">
			<id column="reply_id" property="id" />
		</association>
		<association property="scope" javaType="CommentScope">
			<id column="scope_id" property="id" />
		</association>
	</resultMap>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT
		INTO
		comment_(comment_title,parent_id,user_id,scope_id,comment_date,anonymous,content,reply_to,reply_id)
		VALUES(#{title},#{parent.id},#{user.id},#{scope.id},#{commentDate},#{isAnonymous},#{content},#{replyTo.id},#{reply.id})
	</insert>

	<select id="selectById" resultMap="CommentDetail">
		SELECT c.id,comment_title,parent_id,c.user_id,scope_id,comment_date,reply_id,
		anonymous,content,reply_to,bu.nickname AS user_nickname,bu2.nickname
		AS reply_nickname,file_name,file_store,relativePath
		FROM comment_ c
		LEFT OUTER JOIN blog_user bu ON c.user_id = bu.id
		LEFT OUTER JOIN blog_file bf ON bu.avatar = bf.id
		LEFT OUTER JOIN blog_user bu2 ON c.reply_to = bu2.id
		WHERE c.id = #{id}
	</select>

	<select id="selectPage" resultMap="CommentDetail">
		SELECT
		c.id,comment_title,parent_id,c.user_id,scope_id,comment_date,reply_id,
		anonymous,content,reply_to,bu.nickname AS user_nickname,bu2.nickname
		AS reply_nickname,file_name,file_store,relativePath
		FROM comment_ c
		LEFT OUTER JOIN blog_user bu ON c.user_id = bu.id
		LEFT OUTER JOIN blog_file bf ON bu.avatar = bf.id
		LEFT OUTER JOIN blog_user bu2 ON c.reply_to = bu2.id
		WHERE scope_id = #{scope.id}
		<choose>
			<when test="parent == null">
				AND parent_id IS NULL
				ORDER BY id DESC
			</when>
			<otherwise>
				AND parent_id = #{parent.id}
			</otherwise>
		</choose>
		<if test="user != null">
			AND c.user_id = #{user.id}
		</if>
		LIMIT #{offset},#{pageSize}
	</select>

	<select id="selectCount" resultType="int">
		SELECT COUNT(id) FROM comment_
		WHERE scope_id = #{scope.id}
		<choose>
			<when test="parent == null">
				AND parent_id IS NULL
			</when>
			<otherwise>
				AND parent_id = #{parent.id}
			</otherwise>
		</choose>
		<if test="user != null">
			AND user_id = #{user.id}
		</if>
	</select>

	<delete id="deleteByParent">
		DELETE FROM comment_ WHERE parent_id = #{id}
	</delete>

	<delete id="deleteById">
		DELETE FROM comment_ WHERE id = #{id}
	</delete>

	<delete id="deleteByCommentScope">
		DELETE FROM comment_ WHERE scope_id = #{id}
	</delete>

	<select id="selectCountByDate" resultType="int">
		SELECT COUNT(id) FROM
		comment_
		WHERE user_id = #{user.id}
		AND comment_date BETWEEN #{begin} AND #{end}
	</select>
</mapper>