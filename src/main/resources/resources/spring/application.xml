<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:tasx="http://www.springframework.org/schema/task" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		   					 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		   					 http://www.springframework.org/schema/cache 
		   					 http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
						     http://www.springframework.org/schema/context 
						     http://www.springframework.org/schema/context/spring-context-4.0.xsd
						     http://www.springframework.org/schema/aop 
						     http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
						     http://www.springframework.org/schema/tx 
						     http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
						     http://www.springframework.org/schema/security 
							 http://www.springframework.org/schema/security/spring-security.xsd
						     http://www.springframework.org/schema/mvc 
						     http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
						     http://www.springframework.org/schema/context 
						     http://www.springframework.org/schema/context/spring-context-4.0.xsd
						     http://www.springframework.org/schema/task 
						     http://www.springframework.org/schema/task/spring-task-4.0.xsd">

	<import resource="htmlClean.xml" />
	<import resource="oauth2.xml" />
	<import resource="application-security.xml" />

	<!-- 导入数据库配置 -->
	<context:property-placeholder
		location="classpath:resources/mybatis/dbconn.properties,
			classpath:resources/mail.properties,
			classpath:resources/config.properties,
			classpath:resources/appConfig.properties" />

	<bean id="cacheManagerFactory"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
		p:configLocation="classpath:resources/ehcache/ehcache.xml" />
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
		p:cacheManager-ref="cacheManagerFactory" />

	<bean id="propertyDecoder" class="me.qyh.helper.encrypt.SimpleAESPropertyDecoder" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password">
			<bean class="me.qyh.helper.encrypt.EncryptedStringPropertyFactoryBean">
				<property name="encryptedProperty" value="${jdbc.password}" />
				<property name="decoder">
					<ref bean="propertyDecoder" />
				</property>
			</bean>
		</property>
		<property name="minPoolSize" value="${jdbc.miniPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
		<property name="checkoutTimeout" value="${jdbc.checkoutTimeout}" />
		<property name="automaticTestTable" value="${jdbc.automaticTestTable}" />
		<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" />
	</bean>
	<!-- 配置SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:configLocation="classpath:resources/mybatis/mybatis-config.xml"
		p:dataSource-ref="dataSource" />

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
	<tx:annotation-driven transaction-manager="txManager" />

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="me.qyh.dao;me.qyh.oauth2.dao" />
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>resources/i18n/messages</value>
				<value>resources/i18n/pages</value>
				<value>resources/i18n/validations</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>

	<!-- 用于对邮件的支持 -->
	<bean id="freeMarker"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="classpath:resources/template" /><!--指定模板文件目录 -->
		<property name="freemarkerSettings"><!-- 设置FreeMarker环境属性 -->
			<props>
				<prop key="template_update_delay">3600</prop><!--刷新模板的周期，单位为秒 -->
				<prop key="defaultEncoding">UTF-8</prop><!--模板的编码格式 -->
				<prop key="object_wrapper">freemarker.ext.beans.BeansWrapper</prop>
			</props>
		</property>
	</bean>

	<bean id="urlHelper" class="me.qyh.web.tag.url.UglyUrlHelper">
		<constructor-arg index="0" value="${domainAndPort}" />
		<constructor-arg index="1" value="${enableSpaceDomain}" />
		<constructor-arg index="2" value="#{servletContext.contextPath}" />
	</bean>

	<bean id="freeMarkers" class="me.qyh.helper.freemaker.WebFreemarkers" />

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="protocol" value="${mail.protocol}" />
		<property name="host" value="${mail.host}" />
		<property name="port" value="${mail.port}" />
		<property name="username" value="${mail.username}" />
		<property name="password">
			<bean class="me.qyh.helper.encrypt.EncryptedStringPropertyFactoryBean">
				<property name="encryptedProperty" value="${mail.password}" />
				<property name="decoder">
					<ref bean="propertyDecoder" />
				</property>
			</bean>
		</property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
				<prop key="mail.from">${mail.from}</prop>
			</props>
		</property>
	</bean>


	<context:component-scan
		base-package="me.qyh.common,me.qyh.config,me.qyh.helper,me.qyh.service.impl,me.qyh.manage.service.impl" />


	<bean id="messageService" class="me.qyh.service.impl.MessageServiceImpl">
		<property name="sources">
			<map>
				<entry key="1">
					<bean class="me.qyh.helper.message.GlobalMessageSource" />
				</entry>
			</map>
		</property>
	</bean>

	<bean id="commentService" class="me.qyh.service.impl.CommentServiceImpl">
		<property name="handlers">
			<list>
				<bean class="me.qyh.helper.commenthandler.PageCommentHandler" />
				<bean class="me.qyh.helper.commenthandler.BlogCommentHandler" />
			</list>
		</property>
	</bean>

	<bean id="widgetService" class="me.qyh.service.impl.WidgetServiceImpl">
		<property name="systemWidgetHandlers">
			<list>
				<bean class="me.qyh.page.widget.support.UserInfoWidgetHandler">
					<constructor-arg index="0" value="3" />
					<constructor-arg index="1" value="用户信息" />
				</bean>
				<bean class="me.qyh.page.widget.support.BlogWidgetHandler">
					<constructor-arg index="0" value="1" />
					<constructor-arg index="1" value="博客" />
				</bean>
				<bean class="me.qyh.page.widget.support.BlogCategoryFileWidgetHandler">
					<constructor-arg index="0" value="2" />
					<constructor-arg index="1" value="博客分类归档" />
				</bean>
				<bean class="me.qyh.page.widget.support.BlogDateFileWidgetHandler">
					<constructor-arg index="0" value="4" />
					<constructor-arg index="1" value="博客日期归档" />
				</bean>
			</list>
		</property>
	</bean>

	<bean id="signCacheStoreClearJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="signCacheStoreClear" />
		</property>
		<property name="targetMethod">
			<value>doJob</value>
		</property>
	</bean>

	<bean id="clearFileJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<bean class="me.qyh.job.ClearFileJob" />
		</property>
		<property name="targetMethod">
			<value>doJob</value>
		</property>
	</bean>

	<bean id="clearMessageJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<bean class="me.qyh.job.ClearMessageJob" />
		</property>
		<property name="targetMethod">
			<value>doJob</value>
		</property>
	</bean>

	<bean id="clearFileTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="clearFileJob" />
		</property>
		<property name="cronExpression">
			<value>0 0 1 * * ?</value>
		</property>
	</bean>

	<bean id="clearMessageTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="clearMessageJob" />
		</property>
		<property name="cronExpression">
			<value>0 0 2 * * ?</value>
		</property>
	</bean>

	<bean id="signCacheStoreClearTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="signCacheStoreClearJob" />
		</property>
		<property name="cronExpression">
			<value>0 0/30 * * * ?</value>
		</property>
	</bean>

	<bean id="startQuertz" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="clearFileTrigger" />
				<ref bean="clearMessageTrigger" />
				<ref bean="signCacheStoreClearTrigger" />
			</list>
		</property>
	</bean>

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<aop:config>
		<aop:pointcut id="signCachePoint"
			expression="@annotation(me.qyh.helper.cache.SignCache)" />
		<aop:pointcut id="signCacheEvitPoint"
			expression="@annotation(me.qyh.helper.cache.SignCacheEvit)" />
		<aop:advisor pointcut-ref="signCachePoint" advice-ref="signCacheInterceptor" />
		<aop:advisor pointcut-ref="signCacheEvitPoint" advice-ref="signCacheEvitInterceptor" />
	</aop:config>

	<bean id="innerFileStore" class="me.qyh.upload.server.inner.InnerFileStore">
		<property name="id" value="1" />
		<property name="protocal" value="http"/>
		<property name="uploadRequestUrl" value="upload" />
		<property name="writeRequestUrl" value="write" />
		<property name="deleteRequestUrl" value="clean/file/deletePhysical"/>
	</bean>

	<bean id="avatarStore" class="me.qyh.upload.server.inner.InnerFileStore">
		<property name="id" value="-1" />
		<property name="protocal" value="http"/>
		<property name="uploadRequestUrl" value="my/avatar/upload" />
		<property name="writeRequestUrl" value="avatar" />
		<property name="deleteRequestUrl" value="clean/avatar/deletePhysical"/>
	</bean>

	<bean id="innerFileUploadServer" class="me.qyh.upload.server.inner.InnerFileUploadServer"/>

	<bean id="fileServer" class="me.qyh.upload.server.MemoryServer">
		<property name="stores">
			<list>
				<ref bean="innerFileStore" />
			</list>
		</property>
	</bean>
</beans>      
